[{"/home/olabjouj/project/mynetflix/src/index.js":"1","/home/olabjouj/project/mynetflix/src/App.js":"2","/home/olabjouj/git/MyNetflix/src/index.js":"3","/home/olabjouj/git/MyNetflix/src/container/App.js":"4","/home/olabjouj/git/MyNetflix/src/componemts/search-bar.js":"5","/home/olabjouj/git/MyNetflix/src/container/video-list.js":"6","/home/olabjouj/git/MyNetflix/src/componemts/video-list-items.js":"7","/home/olabjouj/git/MyNetflix/src/componemts/video-details.js":"8","/home/olabjouj/git/MyNetflix/src/componemts/videos.js":"9"},{"size":199,"mtime":1612368691850,"results":"10","hashOfConfig":"11"},{"size":112,"mtime":1612368351610,"results":"12","hashOfConfig":"11"},{"size":214,"mtime":1612799914403,"results":"13","hashOfConfig":"14"},{"size":3860,"mtime":1612883265393,"results":"15","hashOfConfig":"14"},{"size":1548,"mtime":1612868158647,"results":"16","hashOfConfig":"14"},{"size":717,"mtime":1612861800736,"results":"17","hashOfConfig":"14"},{"size":1117,"mtime":1612861793665,"results":"18","hashOfConfig":"14"},{"size":348,"mtime":1612864457628,"results":"19","hashOfConfig":"14"},{"size":361,"mtime":1612799640946,"results":"20","hashOfConfig":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11verkx",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"cervv0",{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"27"},"/home/olabjouj/project/mynetflix/src/index.js",[],"/home/olabjouj/project/mynetflix/src/App.js",[],"/home/olabjouj/git/MyNetflix/src/index.js",[],["42","43"],"/home/olabjouj/git/MyNetflix/src/container/App.js",["44","45","46"],"/home/olabjouj/git/MyNetflix/src/componemts/search-bar.js",[],"/home/olabjouj/git/MyNetflix/src/container/video-list.js",[],"/home/olabjouj/git/MyNetflix/src/componemts/video-list-items.js",["47"],"import React from 'react';\n\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w500/';\n\n\n\nconst VideoListItem = (props) => {\n\n    const movie = props.movie;\n    const urlImage = props.movie.poster_path;\n    console.log('-------mes Liens des images---------', urlImage)\n    return (\n        \n            <li className=\"list-group-left\" onClick={handleClick}>\n                <div className=\"media\">\n                    <div className=\"media-left\">\n                        <img width=\"100px\" height=\"100px\" classeName=\"media-object img-rounded\" src={`${IMAGE_URL}${urlImage}`} />\n                    </div>\n\n                    <div className=\"media-body\">\n                        <li className=\"title-liste-item\">  {movie.title} </li>\n                    </div>\n                </div>\n            </li>\n             )\n            function  handleClick() {\n                console.log('------------')\n                console.log('------Je suis la ------', movie)\n                console.log('------------')\n                props.callBack(movie);\n\n\n                \n            }\n        \n   \n}\n\nexport default VideoListItem;","/home/olabjouj/git/MyNetflix/src/componemts/video-details.js",[],"/home/olabjouj/git/MyNetflix/src/componemts/videos.js",["48"],"import React from 'react';\n\n\nconst YOUTUBE_URL='https://www.youtube.com/embed/';\n\n\nconst Video =(props) =>{\n    const videoId=props.videoId;\n    return (\n        <div className=\"embed-responsive embed-responsive-16by9\">\n            <iframe  classeName =\"embed-responsive-item\"src ={`${YOUTUBE_URL}${videoId}`} />\n        </div>\n\n    )\n\n}\n\nexport  default Video;",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":13,"column":7,"nodeType":"55","messageId":"56","endLine":13,"endColumn":15},{"ruleId":"57","severity":1,"message":"58","line":62,"column":41,"nodeType":"59","messageId":"60","endLine":62,"endColumn":43},{"ruleId":"57","severity":1,"message":"58","line":92,"column":32,"nodeType":"59","messageId":"60","endLine":92,"endColumn":34},{"ruleId":"61","severity":1,"message":"62","line":17,"column":25,"nodeType":"63","endLine":17,"endColumn":131},{"ruleId":"64","severity":1,"message":"65","line":11,"column":13,"nodeType":"63","endLine":11,"endColumn":93},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'undefind' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-global-assign","no-unsafe-negation"]